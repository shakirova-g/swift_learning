import Foundation



// 1. Описать несколько структур – любой легковой автомобиль SportCar и любой грузовик TrunkCar.
// 3. Описать перечисление с возможными действиями с автомобилем: запустить/заглушить двигатель, открыть/закрыть окна, погрузить/выгрузить из кузова/багажника груз определенного объема.


enum  motorSwitch {
case on, off
}

enum windowsCondition {
case open, close
}

enum actionsWithCargoInTheTrunk {
case load, unload
}

// 2. Структуры должны содержать марку авто, год выпуска, объем багажника/кузова, запущен ли двигатель, открыты ли окна, заполненный объем багажника. 

struct SportCar {
var brand: String 
let year: Int 
let trunkVolume: Int 
var motorState:  motorSwitch
var windowsState: windowsCondition
var fullTrunkVolume: Int

// 4. Добавить в структуры метод с одним аргументом типа перечисления, который будет менять свойства структуры в зависимости от действия.

mutating func switchOnMotor () {
self.motorState = .on
}
}

// 2. Структуры должны содержать марку авто, год выпуска, объем багажника/кузова, запущен ли двигатель, открыты ли окна, заполненный объем багажника. 

struct TrunkCar {
var brand: String
let year: Int 
let trunkVolume: Int 
var motorState: motorSwitch
var windowsState: windowsCondition
var fullTrunkVolume: Int 

// 4. Добавить в структуры метод с одним аргументом типа перечисления, который будет менять свойства структуры в зависимости от действия.

mutating func openWindows () {
self.windowsState = .open
}
}

// 5. Инициализировать несколько экземпляров структур. Применить к ним различные действия.
let amarock = TrunkCar(brand: "VW", year: 2018, trunkVolume: 800, motorState: .on, windowsState: .close, fullTrunkVolume: 1000)
let crafter = TrunkCar(brand: "VW", year: 2020, trunkVolume: 900, motorState: .off, windowsState: .open, fullTrunkVolume: 1200) 

var modelS = SportCar(brand: "Tesla", year: 2020, trunkVolume: 500, motorState: .on, windowsState: .close, fullTrunkVolume: 800)
var modelX = SportCar(brand: "Tesla", year: 2019, trunkVolume: 600, motorState: .off, windowsState: .open, fullTrunkVolume: 700)

print("Полный объем багажника " + "\(modelX.brand) " + "\(modelX.fullTrunkVolume) " + "м3")